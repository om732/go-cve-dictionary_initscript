#!/bin/sh
#
# cvedict - this script starts and stops the go-cve-dictionary daemon
#
# chkconfig:   - 85 15
# processname: cvedict
# config:      /etc/sysconfig/cvedict
# dbpath:      /etc/vuls/cve.sqlte3
# pidfile:     /var/run/vuls.pid

# Source function library.
. /etc/rc.d/init.d/functions

gocvedictionary="/usr/local/bin/go-cve-dictionary"
prog=$(basename $gocvedictionary)

user=vuls

sysconfig="/etc/sysconfig/$prog"
lockfile="/var/lock/subsys/go-cve-dictionary"
pidfile="/var/run/${prog}.pid"
daemonlog="/var/log/vuls/vuls.log"

dbpath="/etc/vuls/cve.sqlte3"
port=1323
bind=127.0.0.1

[ -f $sysconfig ] && . $sysconfig

start() {
    [ -x $gocvedictionary ] || exit 5
    if [ ! -f $dbpath ]; then
        echo "start initialize..."
        init
        exit 6
    fi
    echo -n "Starting $prog: "
    sudo -u $user nohup $gocvedictionary server -dbpath $dbpath -bind $bind -port $port >> $daemonlog 2>&1 &
    pid=$!
    retval=$?
    if [ $retval -eq 0 ]; then
        echo $pid > $pidfile
        touch $lockfile
        echo_success
    else
        echo_failure
    fi
    echo
    return $retval
}

stop() {
    echo -n $"Stopping $prog: "
    killproc -p $pidfile $prog
    retval=$?
    echo
    [ $retval -eq 0 ] && rm -f $lockfile $pidfile
    return $retval
}

restart() {
    stop
    start
}

init() {
    if [ -f $dbpath ]; then
        echo "already exists $dbpath"
        exit 6
    fi
    echo "Fetch vulnerability data from NVD"
    echo "It takes about 10 minutes....."
    for i in {2002..2016}; do $gocvedictionary fetchnvd -dbpath $dbpath -years $i; done
    echo "finish"
}

upgrade() {
    $gocvedictionary fetchnvd -dbpath $dbpath -last2y
}

rh_status() {
    status $prog
}

rh_status_q() {
    rh_status >/dev/null 2>&1
}

case "$1" in
    start)
        rh_status_q && exit 0
        $1
        ;;
    stop)
        rh_status_q || exit 0
        $1
        ;;
    restart|reload)
        $1
        ;;
    status|status_q)
        rh_$1
        retval=$?
        ;;
    init)
        $1
        ;;
    upgrade)
        $1
        restart
        ;;
    *)
        echo $"Usage: $0 {start|stop|restart|reload|status|status_q|init|upgrade}"
        retval=2
esac

exit $retval

